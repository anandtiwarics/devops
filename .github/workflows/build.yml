name: devops CI/CD

on: 
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 14
      uses: actions/setup-java@v1
      with:
        java-version: 14

    - name: Build project with Maven
      run: mvn -B package --file backend/pom.xml

  # publish-job:
  #   runs-on: ubuntu-latest
  #   needs: [build]
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-java@v1
  #       with:
  #         java-version: 14
  #     - run: mvn -B package --file backend/pom.xml
  #     - run: mkdir staging && cp -r backend/target/*.jar staging
  #     - uses: actions/upload-artifact@v1
  #       with:
  #         name: Package
  #         path: staging
  DAST:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: install archerysec 
        run: pip install archerysec-cli --force --ignore-installed six
      - name: run zap scan through archerysec
        run: |
          archerysec-cli -h http://54.211.100.97 -t GjnSo-99yta1u7o9-7MQw2KKxaQSICkxFo1f2e159zH0AvzhKtVEa_9jodpUPa8J --cicd_id=3fcfb9af-b58e-44b0-b703-b9c1e240b4ef --project=503b2dc4-d431-47ef-b0a5-d664745c4c85 --zap-base-line-scan --report_path=/__w/
  # SCA:
  #   name: Scurity Scanner
  #   runs-on: ubuntu-latest
  #   needs: [publish-job]
  #   steps:
  #     - name: Check out artifacts
  #       uses: actions/download-artifact@v1
  #       with:
  #         name: Package
  #         path: staging
  #     - name: install archerysec 
  #       run: pip install archerysec-cli==3.1.12 --force --ignore-installed six
  #     - name: run dependency check scan through archerysec
  #       run: |
  #         mkdir dependency-check && archerysec-cli -h http://100.24.71.11 -t w4OpEZ3lxFC5Jz9YXfa7RBKhWDT615C_wGt5CayCPZ7knU48uMJUOs3bGyjlSMzj --cicd_id=0171fc28-7e8e-40b2-8381-fac7631310f2 --project=29b9ce74-f2c7-417d-af7d-4de2d8f810c3 --dependency-check --report_path=$(pwd)/dependency-check
  #     - name: not
  #       run: ls -la

  #       env:
  #         ARCHERYSEC_HOST: ${{ secrets.ARCHERYSEC_HOST }}
  #         ARCHERYSEC_USER: ${{ secrets.ARCHERYSEC_TOKEN }}
    







          